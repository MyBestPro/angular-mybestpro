angular.module("MyBestPro",["indexedDB"]);var MyBestPro;!function(e){var t;!function(e){var t=function(){function e(){this.LOG_INACTIVE=-1,this.LOG_ERROR=0,this.LOG_WARNING=1,this.LOG_INFO=2,this.LOG_LOG=3,this.LOG_DEBUG=4,this.level=3,this.displayMode=!0,this.messages=[],this.consoles={0:console.error,1:console.warn,2:console.info,3:console.log,4:console.debug},this.levels={0:"error",1:"warning",2:"info",3:"log",4:"debug"}}return e.prototype.$get=function(){return{LOG_INACTIVE:this.LOG_INACTIVE,LOG_ERROR:this.LOG_ERROR,LOG_WARNING:this.LOG_WARNING,LOG_INFO:this.LOG_INFO,LOG_LOG:this.LOG_LOG,LOG_DEBUG:this.LOG_DEBUG,level:this.level,levels:this.levels,consoles:this.consoles,messages:this.messages,callbackReceivedLog:this.callbackReceivedLog,callbackChangeStatus:this.callbackChangeStatus,debug:this.debug,info:this.info,error:this.error,warn:this.warn,log:this.log,time:this.time,timeEnd:this.timeEnd,message:this.message,displayMode:this.displayMode,setDisplayMode:this.setDisplayMode,onReceivedLog:this.onReceivedLog,onChangeStatus:this.onChangeStatus,getHistory:this.getHistory,getDisplayMode:this.getDisplayMode}},e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];this.message(this.LOG_DEBUG,arguments)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];this.message(this.LOG_INFO,arguments)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];this.message(this.LOG_ERROR,arguments)},e.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];this.message(this.LOG_LOG,arguments)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];this.message(this.LOG_WARNING,arguments)},e.prototype.setLevel=function(e){this.level=e},e.prototype.setDisplayMode=function(e){this.displayMode=e,this.callbackChangeStatus&&this.callbackChangeStatus.apply(this,[e])},e.prototype.getDisplayMode=function(){return this.displayMode},e.prototype.time=function(e,t){void 0===t&&(t=this.LOG_DEBUG),t>this.level||console.time(e)},e.prototype.timeEnd=function(e,t){void 0===t&&(t=this.LOG_DEBUG),t>this.level||console.timeEnd(e)},e.prototype.message=function(e,t){e>this.level||(this.messages.push({level:this.levels[e],data:t}),this.consoles[e].apply(console,t),this.callbackReceivedLog&&this.callbackReceivedLog.apply(this,[this.levels[e],t]))},e.prototype.onReceivedLog=function(e){this.callbackReceivedLog=e},e.prototype.onChangeStatus=function(e){this.callbackChangeStatus=e},e.prototype.getHistory=function(){return this.messages},e.$inject=[],e}();e.Log=t}(t=e.lib||(e.lib={}))}(MyBestPro||(MyBestPro={})),angular.module("MyBestPro").provider("MBPLog",MyBestPro.lib.Log);var MyBestPro;!function(e){var t;!function(e){var t=function(){function e(e,t){this.$indexedDBProvider=e,this.MBPLogProvider=t,this.tables={},this.$get=["$indexedDB",function(e){return e}]}return e.prototype.addTable=function(e,t){this.tables[e]=t,this.MBPLogProvider.debug("MBPIndexedDB: Add table "+e+" with configuration - ",t)},e.prototype.setDB=function(e,t){this.databaseName=e,this.databaseVersion=t,this.MBPLogProvider.debug("MBPIndexedDB: Set DB with "+e+" version "+t)},e.prototype.initDatabase=function(){var e=this;e.$indexedDBProvider.connection(e.databaseName).upgradeDatabase(e.databaseVersion,function(t,o,s){e.MBPLogProvider.log("MBPIndexedDB: Start droping database "+e.databaseName+" ..."),e.MBPLogProvider.debug("MBPIndecedDB: Tables to drop - ",o.objectStoreNames),angular.forEach(o.objectStoreNames,function(t){e.MBPLogProvider.log("MBPIndexedDB: Delete table "+t),o.deleteObjectStore(t)}),e.MBPLogProvider.log("MBPIndexedDB: Start creating database "+e.databaseName+" ..."),e.MBPLogProvider.debug("MBPIndecedDB: Tables to generate - ",e.tables),angular.forEach(e.tables,function(t,s){e.MBPLogProvider.log("MBPIndexedDB: Start upgrading table "+s),e.MBPLogProvider.debug("MBPIndexedDB: Table configuration - ",t);var i=o.createObjectStore(s,{keyPath:t.keyPath});angular.forEach(t.columns,function(t,o){e.MBPLogProvider.log("MBPIndexedDB: Start indexing table column "+s+"."+o),e.MBPLogProvider.debug("MBPIndexedDB: Column indexing configuration - ",t),i.createIndex(o+"_idx",o,t)})})})},e.$inject=["$indexedDBProvider","MBPLogProvider"],e}();e.IndexedDB=t}(t=e.lib||(e.lib={}))}(MyBestPro||(MyBestPro={})),angular.module("MyBestPro").provider("MBPIndexedDB",MyBestPro.lib.IndexedDB);var MyBestPro;!function(e){var t;!function(e){var t=function(){function e(e,t){this.$scope=e,this.MBPLog=t,this.$inject=["$scope","MBPLog"],e.displayMode=t.getDisplayMode(),e.messages=t.getHistory(),t.onReceivedLog(function(t,o){e.messages.push({level:t,data:JSON.stringify(o)})}),t.onChangeStatus(function(t){e.displayMode=t})}return e}();e.Log=t}(t=e.controller||(e.controller={}))}(MyBestPro||(MyBestPro={}));var MyBestPro;!function(e){var t;!function(t){function o(){return{restrict:"E",scope:{},template:'<ul><li ng-repeat="message in messages" ng-show="displayMode" class="mbp-log-{{ message.level }}"><strong ng-bind="message.level"></strong> {{ message.data }}</li>',controller:e.controller.Log}}t.Log=o}(t=e.component||(e.component={}))}(MyBestPro||(MyBestPro={})),angular.module("MyBestPro").directive("mbpLog",MyBestPro.component.Log);
//# sourceMappingURL=angular-mybestpro.min.js.map
